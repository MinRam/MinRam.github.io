{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"404","text":"","link":"/404/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/hexo/hello-hexo/"},{"title":"程序员面试攻略 —— 薪资构成","text":"这篇文章是自己在面试准备中，参照他人经验以及自身总结经历的随笔。希望读者在看完全文后，也能留下你们的经验。我万分荣幸能收到你们的消息。如果能从这里学到点东西，记得请我喝杯☕☕☕~ —— MinRam 前言开篇时候膜一下《中国人民共和国劳动法》。 吐槽下官网互联网建设不足，急需IT人才~ 一、薪水构成科技公司的小伙伴们会用 TC (Total Compensation)，来表示实际收入总包。总包的计算方法各公司稍有不同，但无外乎包括以下几个部分： 基本工资 Base (五险一金、个人收入所得税) 年终奖 Bonus 股票 Equity (RSU/Option) 初始股票 Initial grant 新发股票 Refresh 而再详细点 二、看得到的工资2.1 基础工资 Base Salary这是在入职合同上填写的固定收入，具体是根据入职时候的市场价、面试表现、职位等级决定的。入职后将随公司策略有一定的涨幅。 可以理解为，这是公司每个月给我们的月薪。在扣除五险一金，工资税后，剩下的会转账到个人工资卡上，也就是你实际到手的金额。 工资税的计算， 可以查看 中华人民共和国个人所得税法, 可以通过个人所得税APP查看， 从当地的本地宝公众号查询。回复“个税”，可以直接进入个人所得税入口。 五险一金，查看下文。 2.2 年终奖 Bonus 年终奖，是老板给予员工一年来的工作业绩奖励，一般位于年末到年初时候发放。 年终奖主要用来奖励员工一年的业绩表现， 以及摁住员工跳槽的念头。所以我们可以从一年的年终奖看出公司对你的期待。往往年终奖发完的这一阶段，是你进行离职或者跳槽的最佳时间。 年终奖上不封顶，一般为月薪的2个月。 年终奖也是同样需要缴纳个人所得税的。可以查看 《国家税务总局关于调整个人取得全年一次性奖金等计算征收个人所得税方法问题的通知》。 2.3 股票 Restricted Stock Units股票收入主要包含两部分： 初始合同一次性承诺给予股票，分四年（或五年）按月/季度/年发放 各公司政策稍有不同，有些公司在员工入职一年后才开始按季度发（业内叫 one-year cliff），而有些公司入职第一个月就开始发 不是所有公司都等额发放，比如亚麻头两年 5% 和 15%，后面两年各 40%，Snap 也有类似规定。微软，则是等额发放。 每年新发股票 Refresh 每过一年，公司会根据员工表现，新发一定股票，同样也是分四年发完 新入职第一年，不是所有公司都给 refresh，各家公司 refresh 规定都不太一样，会随着市场情况调整，具体情况具体讨论 据说，Uber 把 refresh 当成 bonus 的一部分，分 cash bonus 和 stock bonus 另外在司期间，对于上市公司，可以行使公司股票的购买权（以某个特定价格购买股票的权力） 个人觉得股票避税的两种方式： 等你老了没有这么高工资了再卖，这样capital gain tax braket 比较低（因为交易税和收入税挂钩 如果你有多支股票的话，找机会卖一个亏损的，claim capital gain loss， 然后再卖这个赚钱的，这样两两相抵。 2.4 五险一金 five-insurance payment 再膜一下 《中华人民共和国社会保险法》 五险一金是指用人单位给予劳动者的集中保障性待遇的合称，包括【五险】（养老保险、医疗保险、失业保险、工伤保险、生育保险）和【一金】（住房公积金）。 缴纳基数是社保计算的基数，决定了五险一金的缴纳金额。新入职员工是以起薪当月月收入作为缴纳基数，入职一年以上的员工以上一年月平均收入作为缴纳基数。 注意，有部分公司的社保基数并不会随着你的月薪资增涨而增涨（一个职业坑） 养老保险 (企业 + 个人共同缴纳) 是国家根据法律、法规的规定，强制建立和实施的一种社会保险制度。 在达到法定退休年龄，且累积缴纳养老保险费满15年。 由社保机构每月给你发放的养老金。取决于你交社保的年限，每月缴纳金额，户籍地，职称等决定。 医疗保险（企业 + 个人共同缴纳） 是补偿我们因为疾病造成的经济损失（医药费, 住院费等）建立的社会保险制度。主要是减轻我们的医疗费用负担，每月从我们月薪资扣除保险费用，从而可以报销部分或全部医疗费用。 医保卡， 分成统筹账号和个人账号，具体可参考当地标准。 失业保险（企业 + 个人共同缴纳） 是在我们因失业没有经济来源时候，能给我们提供基础生活保障的一种社会保险制度。 被公司辞的，并且原公司有给你按规定缴纳失业保险。（如果是被辞，按劳动法规定，还需要支付你 N+1 ~ 2N+1的工资费用） 可按月领取失业保险金（满足基本生活费用） 工伤保险（企业缴纳） 在工作或特殊情况下，因意外伤害或者患职业病导致的暂时或永久丧失劳动力和死亡时，劳动者或者遗嘱从国家和社会获得物质帮助的一种社会保障制度 简单来说，因工受伤拿补助。对于程序员，尤其注意自己在“加班期间”如果受伤，需要指明工作期间。 这是企业给员工缴纳的健康保障 生育保险（企业缴纳） 是国家通过立法，在怀孕和分娩的妇女劳动者暂时中断劳动时，由国家和社会提供医疗服务、生育津贴和产假的一种社会保险制度。 一是生育津贴（社保机构发放产假/陪产假期间的工资），二是生育医疗待遇（报销医疗费用） 休产假期间，如果有生育津贴，公司是可以不需要再发放工资（但如果生育津贴如果不足，公司需要补全到月工资水平）。 住房公积金 是国家强制用人单位和雇员按照相同的比例交的一种长期住房储蓄金，专项用于个人支付住房方面的费用。 具体用途就是， 申请贷款买房（利率低），付房租费用，支付房屋装修费，甚至治疗重大疾病。如果实在没有用处，最后满足条件可以全额现金提取。 补充个异地跳槽后，本地公积金可以进行封存，在你新入职一个月后可申请异地转移接续手续。三、看不到的工资 除了以上提到几点，刚入职是还会有一笔现金签字费，入职后一定时间内支付，主要由 negotiation（有无 competing offer、公司多么想招你）决定。 另外，还有各大科技公司著名的好福利，比如健康保险、免费的一日三餐、健身房、游泳池，博物馆免费门票/打折票，车险、房屋保险、租车、买车、滑雪等一系列的 corporate rate，免费/打折的衣服干洗、理发、体检，commuter benefit 报销上下班公共交通，等等。 例如, 微软，提供餐补，健身费用和培训费用报销，医疗保险公司全额报销，足额公积金等。如有兴趣，拿简历砸我吧！ >- 已阅留爪，分享自己公司福利制度 (ฅ´ω`ฅ) -","link":"/cheng-xu-yuan-mian-shi-gong-lue/interviewincoming/"},{"title":"程序员面试攻略 —— 简历","text":"参考 [1] The Google Résumé: How to Prepare for a Career and Land a Job at Apple, Microsoft, Google, or any Top Tech Company","link":"/cheng-xu-yuan-mian-shi-gong-lue/interviewresume/"},{"title":"程序员面试攻略 —— 薪资谈判","text":"这篇文章是自己在面试准备中，参照他人经验以及自身总结经历的随笔。希望读者在看完全文后，也能留下你们的经验。我万分荣幸能收到你们的消息。如果能从这里学到点东西，记得请我喝杯☕☕☕~ —— MinRam 一、谈工资需要谈工资，就是要钱，赤裸裸要钱，要完钱后还是要钱。整个过程需要承担一定的风险，存在谈崩的可能。 如果觉得工资是由能力决定的，公司会根据自己能力很公平的裁定的人，大可跳过这个回答。 比如我，把自己比喻成商品，信奉市场供需关系。不是公司单方面决定我的工资，定期准备面试，保证自己的市场竞争能力。 二、谈工资的人群如果你是实习生&amp;应届生，那谈工资的空间并不大，那俩都是差不多的背景，拿IT类职位，一年收入差距大概一两万。如果是经验丰富的，能通过谈薪提高几万年薪。 不过我自己还是建议尽早开始练习谈薪，毕竟这样的机会不多，为未来的自己提前练习谈薪资。薪资是一步步往上提高的，每一步都要争取最大利益化。（谈薪过程巨刺激） 三、公司方面的面试成本有个指标叫做CPH (cost per hire)，人均招聘成本。招聘一个合格工程师，需要花费多个款项，包括简历来源、招聘工具、中介代理费、候选人的差旅和住宿、招聘活动开支。 除此之外，还包括招聘团队的薪资，鼓励奖金，甚至是技术面开发人员带薪面试。（打断一个有面试能力的开发人员去组织面试，需要花费更多的时间让他回归到原来的工作上) 加上并不是每次应聘者都能符合要求，拿到offer。或者是拿到offer的应聘者，最后也有一定的概率拒绝offer。当你拿到offer时，公司已经在你身上花费了很多时间和钱。 另外负责跟你交接的HR，可以了解他们薪资体系，绩效奖金（入职率）占据他们大部分的薪水。他们具有很强的动力，撮合你和公司的缘分。（听说有的公司会选择第二个HR来谈薪，避免这种事情。） 综上，如果你通过了面试，拿到offer，公司内部所有人都希望你能接受，而不是拒签。 四、公司初步定薪套路每个职位，都有对应的级别，以及相应级别的薪资范围，同样的级别也会有高薪低薪之分。另外同样的职位，绝大部分不会给上限工资，这涉及到公司的工资预算。 HR给的offer数字，会考虑： 能低价就低价（大部分人就这样被牵着鼻子走） 会给后面的提薪留余地（如果你有讨价的话） 太低了，可能会直接被拒。 HR往往会依照明确的参考标准（比如不断询问你当前的薪资水平），再加上一定的涨幅出价。 注意，HR并不会根据你的能力出价的。能力是个不可以客观量化的东西。仅仅通过面试是很难考察出一个人的真正能力（面试表现好≠工作能力好）。 另外，你的老雇主出10万就能招到你，我司为何要出20万甚至30万？增加20%，一年给12万就很好了。还有，你为什么只值10万？是不是能力其实也就那么回事啊。尤其是好多年没跳槽的人，是不是没有能力拿高薪？这些想法未必正确，但是从公司的角度来看，有这些疑问，不算过分。 再给出几个不同角度的参考因素： 不利的一面： 应聘旺季，如春招秋招，公司有较多的候补人，此时供大于需，公司大概率不在乎你。 应届毕业生，应届毕业生的工资，一般有经验的HR都能猜到，回到明确参考标准那点。 老钉子户，由于长时间未挪窝，基本丧失市场竞争力，HR就会按市场平均水平直接给。（当然，对于资深高级人员，往往通过猎头来寻求谈判。） 进城户，之前的生活消费水平低，迁移到较好的城市，这种对于HR会给较低薪资，因为好打发。 有利的一面： 缺人的岗位&amp;技能，意味着你是个香饽饽，卖方市场，会有多家公司抬价。 海王，待过多家公司（非负面记录），工作多年，经验老道，HR猜不到你工资。 大公司背景，会给HR足够的俯视压力。 公司周边基建因素，诸如当前国内存在大公司往郊区迁移，周边配套服务往往不足。 还有其他的因素，不一一例举。以上也能作为就业参考因素。 五、谈判前的准备工作 合理安排面试时间，能保障手上有多份Offer。多份Offer在手，方便比较竞价。同时就算谈崩了，也有其他offer，能走选择的余地。如何合理安排时间，就需要考虑到公司的招聘速度。这个参考对应面经，或直接询问hr即可。 说下公司竞价的原因，之前提过，一场面试并不能衡量一个人的各方面素质，能满足职位要求。每家公司都出现过，招聘后不能给出有效产能的员工，最后只能开除或者内部调岗。 然而，如果你拿到了多家公司的Offer，得到多家公司的认可，这就是一个很强的信号。经过了多轮面试的考研，大家都认可。公司非常愿意高价招手握一把Offer、大家都说好的求职者。 不透露当前工资水平。对这个就是，不说，不谈，不填。 大部分公司是不能看到前东家薪资的。（进去背调后才会要求工资流水）没必要说，也没必要虚报，不说就行。工资是根据当前的背景和经验决定的，选择了寻找新公司，就说明当前薪资是不满足自己的价值的。那新公司又有啥理由，以此为借口继续打压？ 六、谈判Tips在公司已经给出具体工资数字情况下，如何继续讨价还价 双方保持兴趣是前提 如果你没兴趣加入这家公司，甚至对公司的前景不看好。那就算你再牛叉，对公司来说，招聘你并不会带来任何收益。公司会果断取消Offer。你需要对公司有强烈的兴趣，这样公司才会反过来“追”你，甚至愿意让步加价。即使后面双方意见不一致，也不至于留有坏印象。 对于一家公司，去什么样的小组，公司环境和发展机会，甚至公司的未来计划如何，都是选择Offer的重要因素。入职前，能从不同角度去看待公司，从不同的渠道收集信息，能提前预防你踩坑。 公司文化，可以参照各种新闻对公司的介绍。公司在意什么，领导强调什么，那就是他们的公司文化。说“好”就完事。 沉住气，不要当场答应 无论对方给出什么样的总包，即便是惊喜，即便是大牛公司，即便是你现在唯一的Offer，也不要立马答应，因为任何时候都是有讨价还价的地步。HR并不期望当场拿到答复，他们告诉你的同时也做好了收到拒Offer的消息。 对于HR，为了能促使你接受Offer，HR甚至会主动加价，沉住气没准你每年能拿到更多的钱。 多听少说 当你拿到Offer，进入了谈薪资的阶段时候，注意要多听少说。 HR行业门槛普遍较低，可以发现很多是文科出身，毕业没多久的妹子，当然这不包括经验老练的猎头。沟通，是一件细活，你需要留意她们说的每一句话，每一个字，也许她们无意之间会透露很多信息给你。沉默是金，让对方多揣测你的心思，出昏招。我们需要足够的信息来支撑我们接下来的谈判。 比如： 谈到薪资的时候，你沉默不语，她可能回了一句，“你对股票还满意么？”，你可以从中得出股票部分还有提升空间。 谈到部门招聘计划，HR答复有很大的招聘计划，你可以从中得出公司迫切填补当前的人力需求。综上这些，我们在接下来的谈判都会更有底气 书面确定工资数目 大部分的公司，会随着Offer会发一个正式的邮件通知。而有的公司，只会电话口头Offer。口头Offer，意味着缺少法律效应，即便入职后公司基于的薪资不一致，你也无从谈起。 为了防止公司“理解有误”，也为了防止公司“将来反悔”，我们还是要想方设法在入职前，拿到这份正式的Offer邮件。或者自己主动发送这封邮件，如果对方答复了，也是具有法律效应的。 关于程序员薪资组成，我会在后续出单篇描述。 按照自己的节奏进行 仅限于跳槽的同学们。对于第一份offer，自身还是比较被动的，只能适应他们的节奏。 HR往往乐意逼着我们接Offer，比如两天内给答复。对于这种，只有两个字，没门！至于拒绝的理由也是显而易见的，拖家带口、外地搬家（卖房子，子女上学，配偶工作等）、多份Offer(综合考虑) 牢记一个原则： 我们值得这个价，而且现在我们是在选择更好的机会,而不只是为了饭碗。公司如果想招揽我们，就需要拿出足够的诚意。 催其他公司给offer 谈判最有力的手段，就是多家公司竞价。 在收到A公司的Offer后，转头找B要Offer，催着他们，千万不要等着他们答复。如果A公司的Offer有分量，你可以跟B公司摆摆。在过程中，会有HR让你透露下其他Offer的薪资，你只要牢记对每家公司都透露，自己强烈的兴趣，再拿其他更高的Offer比较。没准公司就咬咬牙加价了。 整个过程，就跟菜市场讲价一样，如果你精通此道，那必定手到擒来。中间有很多细节需要自己慎重处理，但一定要内心强大，坚持下来，没准接下来你能谈出一辆奔驰🚗（就只动动嘴）。 七、offer的选择 Offer的选择，需要结合自己的情况思考。这里只是我个人的遇到的一些情况。 薪资， 薪资一般包括：基础工资（Base Salary)、奖金（Bonus)和期权（Stock）。 可以找个在线薪资计算器，大概计算每年的收益多少。以及包括税前税后的收入是否满足自己的期望。 五险一金， 国内和国外企业在这一方面的待遇相差较多，特别是住房公积金这一条。主要作为国内和国外企业Offer的考虑点。 上市公司， 相比没上市公司，存在很大的不确定性。如股票的估值，上市6个月后才能套现股票，以及公司的发展前景。当然，也存在等公司上市后，股票套现，实现财务自由。这点回到之前自己对公司的了解和发展的预判。 另外，假若如果只是考虑跳板因素，则更多的是考虑职位和领域，能给下一次提供更好的经验。 职位， 职位涉及的领域，决定了你下一份工作的方向和范围。选择的这段经历，将作为转行管理的跳板，未来高升的积累。这里建议多考虑长远目标。 凡是没有立即兑现的，都是虚无的，就当没有给。 画饼永远都是老板的手段，如果兑现了，得偿所愿。那没有兑现呢？你就真白打工了。 八、最后薅一把 无论对方给你什么数字，就算满足你的期望，也不建议你当场答应。玩的就是心理战，没准最后关头，公司给你加个红包，比如签字费涨几万等等。 >—— 码字不易，已阅留爪 (ฅ´ω`ฅ) ——","link":"/cheng-xu-yuan-mian-shi-gong-lue/interviewsalary/"},{"title":"简单系统设计 —— 分布式系统（一）","text":"本系列，是自己学习Grokking the System Design过程中的笔记。希望读者在看完全文后，也能留下你们的经验。我万分荣幸能收到你们的消息。如果能从这里学到点东西，记得请我喝杯☕☕☕~ —— MinRam 前言 系统设计(System Design), 即针对系统的应用需求，设计出具有高性能，高拓展性，高可用性等的系统。 每个人学系统设计的目的不一样。笔者的学习目的只有两个： 社招面试准备。为通过微软面试的系统设计阶段做准备。 脱离底层工作内容（摆脱程序猿的帽子），挺进更具有技术价值的工作领域做准备。 实际工作中绝大多数内容都完全用不到算法，更多是增删查改(CRUD)、对接 API、调整数据格式之类的。更进一步的工作，通常也是和系统设计关系更大。 系统设计面试方面的准备资料，将在《程序员面试攻略》篇补充。 接下来，介绍些现系统中常见的核心模块。 个人对系统设计的理解，也只是冰山一角，并非立山顶，也只是站于山前，从前人留下的斑斑点点揣测大山全貌，其中个人猜想成分偏多，还望各位大师指点迷津。 分布式系统 Distubed Systems 分布式系统，即使用廉价、普通的机器集群，去完成单个机器无法完成的计算和存储任务。其根本目标就是利用更多的机器，处理更多的数据。 比如Google，Microsoft等大型系统，其背后都是由上万台设备组成的数据中心，但对于我们，只感知到他是一个系统。 从特征开始了解： 1.可伸缩性 Scalability可伸缩性是指当系统的任务（work）增加的时候，通过增加资源来应对任务增长的能力。可扩展性是任何分布式系统必备的特性。 举个例子，跑个算法程序，耗时很久。这时候我们有两种方式可以优化： 把原来的电脑换成性能更好的电脑。 ( 垂直扩容 Vertical Scaling) 把程序分成两半，分布在两个电脑上分别承担。 (水平扩展 Horizontal Scaling) 扩展性的目标是使得系统中的节点都在一个较为稳定的负载下工作，这就是负载均衡，当然，在动态增加节点的时候，需要进行任务（可能是计算，可能是数据存储）的迁移，以达到动态均衡。 其中 MongoDB 和 Apache Cassandra 就是典型水平扩容的分布式系统，可以通过增加机器节点，来提升对数据读写的处理能力。而MySQL则是垂直扩容的分布系统，提供了简单的途径用以切换到性能更好或者成本更廉价机器上，但这需要一定的停机时间（DownTime)。 伸缩不仅仅在资源的扩展，也包括在空闲时期对系统的缩容，来节省不必要的资源成本。特别是云时代，算力决定了产品的硬件成本, 淘宝不可能以双十一的处理成本来处理每日的订单。 2.可靠性 Reliability可靠性关注于系统发生故障(功能故障）的概率。例如当系统中有节点故障时，能被其他健康的节点替代（例如HA, 容灾等），那么可以认为在整体功能上有较高的可靠性。 以淘宝为例，当用户添加一个商品到购物车时候，系统应不丢失这个操作。即使负责处理这个操作的服务器死机，将由另一台服务器快速替代他处理这个操作。 显然冗余是保障系统的一个重要措施。这也同样带来了额外的成本，但对于宝贵的数据丢失，这点不足为道。 3.可用性 Available可用性关注于系统的所有生命周期里，提供服务的时间比例。 以飞机为例，一个月不间断飞行，那这架飞机的可用性较高。但如果停机维护，那就是不可用。 这里容易把可靠性和可用性的概念混淆： 可用性 被定义为系统的一个属性，它说明系统已准备好，马上就可以使用。换句话说，高度可用的系统在任何给定的时刻都能及时地工作。 可靠性 是指系统可以无故障地持续运行，是一个持续的状态。与可用性相反，可靠性是根据时间段而不是任何时刻来进行定义的。 如果系统在每小时崩溃1ms，那么它的可用性就超过99.9999%，但是它还是高度不可靠。与之类似，如果一个系统从来不崩溃，但是每年要停机两星期，那么它是高度可靠的，但是可用性只有96%。 补充： 平均故障间隔时间（MTBF，Mean Time Between Failure），是指相邻两次故障之间的平均工作&gt;时间，是衡量一个产品的可靠性指标。 平均修复时间（MTTR，Mean Time To Repair），是描述产品由故障状态转为工作状态时修理时间的平均值。在工程学中，MTTR是衡量产品维修性的值.在维护合约里很常见，并以之作为服务收费的准则。$$ Availability = \\frac{MTBF}{MTBF + MTTR} $$ 4.高吞吐 Effective 一个系统的高吞吐，指的是处理业务请求的效率，体现在两个方面： 响应时间 &amp; 吞吐量 响应时间，系统响应一个请求或输入需要花费的时间。 响应时间直接影响到用户体验，对于时延敏感的业务非常重要。 吞吐量，系统在一定时间内可以处理的任务数。这个指标可以非常直接地体现一个系统的性能，就好比在客户非常多的情况下，要评判一个银行柜台职员的办事效率，你可以统计一下他在 1 个小时内接待了多少客户。常见的吞吐量指标有 QPS（Queries Per Second）、TPS（Transactions Per Second）和 BPS（Bits Per Second）。 一个大型系统的操作业务是复杂繁琐的。以上两个指标只是粗略地估计系统的效率。除此之外，还有网络拓扑结构，网络负载和变化，涉及硬件还要考虑IO的读写等，要对一个大型系统建立性能模型，这依赖于对各方面性能指标的采集。 5.服务性 &amp; 可管理性 Serviceability or Manageability 该点考虑的是系统运行中，必经的修理和维护周期。 设计分布式系统时的一个重要考虑事项是操作和维护的容易程度。这决定了系统能保持可用时间的长短。 可管理，指在系统进行维护或者修复的简易程度和耗时长短。（如果系统不容易修复，那可以理解为系统将较长时间处于不可用状态） 考虑这点特性，需要关注与系统发生问题时： 能轻易找到问题根因， 快速提出问题修复方案 更新版本或者修复问题所需要的成本（停机？人力？物力？） 系统的操作所需要的技能程度 可管理性的考虑需要涉及到系统的整个生命周期（发布，更新等）。 题外话，服务性&amp;可管理性，在现在的大型系统中更侧重于运维的能力和成本。因此就有了Google提出的SRE团队的出现，专门针对整个系统的管理能力开发一系列监听和处理的模块。用来预测，监听和无人工干预的修复各种问题风险。在当下也有部分公司开始启动了更加创新的AIOps计划，结合智能领域，实现系统的智能管理。 综上的特征，最后根据自己产品特性需求，如搭积木般选择各式各样的组件，形成了如下的分布式系统（图中为典型组件，并非最佳组件选择）： >- 已阅留爪 (ฅ´ω`ฅ) - 下一章 《负载均衡的网关》-","link":"/xi-tong-she-ji/systemdesign-01-distubed-system/"},{"title":"简单系统设计 —— 负载均衡（二）","text":"","link":"/xi-tong-she-ji/systemdesign-02-load-balance/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"面试","slug":"面试","link":"/tags/%E9%9D%A2%E8%AF%95/"},{"name":"系统设计","slug":"系统设计","link":"/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"}],"categories":[{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"程序员面试攻略","slug":"程序员面试攻略","link":"/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E6%94%BB%E7%95%A5/"},{"name":"系统设计","slug":"系统设计","link":"/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"}]}